{"version":3,"sources":["data.js","Cart.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Parent","props","Child1","이름","Child2","나이","useEffect","console","log","memo","connect","state","reducer","alert열렸니","reducer2","Table","responsive","map","a","i","name","quan","onClick","dispatch","type","데이터","className","calssName","aria-hidden","Detail","lazy","재고context","React","createContext","Card","useContext","history","useHistory","push","shoes","src","width","Test","재고","App","useState","Data","shoes변경","재고변경","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","Provider","value","n","axios","get","then","result","data","catch","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","copy","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a6030dca.chunk.js","sourcesContent":["export default [\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] ","import React, { useEffect, memo } from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props) {\r\n  return (\r\n    <div>\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.state.map((a,i)=>{\r\n              return(\r\n                <tr key={i}>\r\n                  <td>{a.id}</td>\r\n                  <td>{a.name}</td>\r\n                  <td>{a.quan}</td>\r\n                  <td>\r\n                    <button onClick={()=>{ props.dispatch({type : '수량증가', 데이터: a.id}) }}>+</button>\r\n                    <button onClick={()=>{ props.dispatch({type : '수량감소', 데이터: a.id}) }}>-</button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n      </Table>\r\n\r\n      {\r\n        props.alert열렸니 === true\r\n        ? (\r\n          <div className=\"my-alert2\">\r\n          <p>지금 구매하시면 신규할인 20%\r\n            <button calssName=\"close\" onClick={()=>{ props.dispatch({type: 'alert닫기'}) }}>\r\n              <spnn aria-hidden=\"true\">&times;</spnn>\r\n            </button>\r\n          </p>\r\n        </div>\r\n        )\r\n        : null\r\n      }\r\n\r\n      <Parent 이름=\"박리아\" 나이=\"31\"></Parent>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction state를props화 (state) {\r\n  //console.log(state);\r\n  return {\r\n    state : state.reducer,\r\n    alert열렸니 : state.reducer2\r\n  }\r\n}\r\n\r\nfunction Parent(props){\r\n  return (\r\n    <div>\r\n      <Child1 이름={props.이름}></Child1>\r\n      <Child2 나이={props.나이}></Child2>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Child1(props){\r\n  useEffect(()=>{ console.log('렌더링됨1') });\r\n  return <div>1111</div>\r\n}\r\n\r\nlet Child2 = memo(function() {\r\n  useEffect(()=>{ console.log('렌더링됨2') });\r\n  return <div>2222</div>\r\n});\r\n\r\nexport default connect(state를props화)(Cart)\r\n\r\n//export default Cart;","/* eslint-disable */\n\nimport React, { useState, useContext, lazy, Suspense } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron, Container } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\n//import Detail from './Detail.js';\nlet Detail = lazy(()=>{ return import('./Detail.js') });\n\nimport axios from 'axios';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport Cart from './Cart.js';\n\nexport let 재고context = React.createContext();\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10,11,12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured\n              content or information.\n              </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n\n            <재고context.Provider value={재고}>\n            <div className=\"row\">\n              {\n                shoes.map((n, i)=>{\n                  return <Card shoes={n} i={i} key={i}/>\n                })\n              }\n            </div>\n            </재고context.Provider>\n\n            <button className=\"btn btn-primary\" onClick={()=>{\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                // console.log(result.data)\n                shoes변경( [...shoes, ...result.data] );\n              })\n              .catch(()=>{\n                console.log('실패했어요');\n              });\n            }}>더보기</button>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <Suspense fallback={<div>로딩중이에요</div>}>\n            <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n          </Suspense>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나 적었을 때 이거 보여줘</div>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props) {\n\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return (\n    <div className=\"col-md-4\" onClick={()=>{ history.push('./detail/' + props.shoes.id) }}>\n      <img src={\"https://codingapple1.github.io/shop/shoes\" + (props.i+1) + \".jpg\"} width=\"100%\"/>\n      <h4>{props.shoes.title}</h4>\n      <p>{props.shoes.content} & {props.shoes.price}</p>\n      <Test />\n  </div>\n  )\n}\n\nfunction Test(){\n  let 재고 = useContext(재고context);\n  return <p>재고 : {재고}</p>\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if(액션.type === 'alert닫기'){\n    return false\n  } else {\n    return state\n  }\n}\n\nlet 초기값 = [\n  { id : 0, name : '멋진신발', quan : 2 },\n  { id : 1, name : '예쁜신발', quan : 5 }\n]\n\nfunction reducer(state=초기값, 액션){\n  if( 액션.type === '항목추가') {\n    let found = state.findIndex((a)=>{ return a.id === 액션.데이터.id });\n\n    if(found >= 0) {\n      let copy = [...state];\n      copy[found].quan++;\n      return copy\n    } else{\n      let copy = [...state];\n      copy.push(액션.데이터);\n      return copy\n    }\n  }\n  else if( 액션.type === '수량증가' ) {\n    let copy = [...state];\n    copy[액션.데이터].quan++;\n    return copy\n  } else if( 액션.type === '수량감소' ) {  \n    let copy = [...state];\n    copy[액션.데이터].quan--;\n    return copy\n  } else {\n    return state\n  }\n}\n\nlet store = createStore(combineReducers({reducer, reducer2}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n\n//serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}