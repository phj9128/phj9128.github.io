{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","id","connect","state","reducer","alert열렸니","reducer2","useState","alert","alert변경","inputData","inputData변경","누른탭변경","스위치","타이머","setTimeout","console","log","clearTimeout","useParams","history","useHistory","찾은상품","shoes","find","상품","className","onChange","e","target","value","src","parseInt","width","title","content","price","onClick","arr","재고변경","dispatch","type","데이터","name","quan","push","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"6NAUIA,EAAKC,IAAOC,IAAV,+CAIFC,EAAKF,IAAOG,GAAV,gEAEO,SAAAC,GAAK,OAAIA,EAAMC,gBAwF1B,SAASC,EAAWF,GAMlB,OAJAG,qBAAU,WACRH,EAAMI,gCAAM,MAGI,IAAdJ,EAAMK,mBACD,iFACgB,IAAdL,EAAMK,mBACR,iFACgB,IAAdL,EAAMK,mBACR,sFADF,EAKT,SAASC,EAAKN,GACZ,OACE,gDAASA,EAAMO,aAAGP,EAAMQ,OAYbC,uBARf,SAAuBC,GAErB,MAAO,CACLA,MAAQA,EAAMC,QACdC,0BAAWF,EAAMG,YAINJ,EAlHjB,SAAgBT,GAAQ,IAAD,EAEIc,oBAAS,GAFb,mBAEdC,EAFc,KAEPC,EAFO,OAGYF,mBAAS,IAHrB,mBAGdG,EAHc,KAGHC,EAHG,OAIAJ,mBAAS,GAJT,mBAIdT,EAJc,KAITc,EAJS,OAKAL,oBAAS,GALT,mBAKdM,EALc,KAKThB,EALS,KAOnBD,qBAAU,WAER,IAAIkB,EAAMC,YAAW,WAAKN,GAAQ,KAAS,KAE3C,OADAO,QAAQC,IAAI,gBACL,WAAMC,aAAaJ,MAC1B,IAZiB,IAcdb,EAAMkB,cAANlB,GACDmB,EAAUC,cACVC,EAAO7B,EAAM8B,MAAMC,MAAK,SAASC,GACnC,OAAOA,EAAGxB,IAAMA,KAGlB,OACE,sBAAKyB,UAAU,YAAf,UACE,cAACtC,EAAD,UACE,cAACG,EAAD,CAAImC,UAAU,MAAd,sBAGDhB,EACD,uBAAOiB,SAAa,SAACC,GAAMjB,EAAYiB,EAAEC,OAAOC,WAGlC,IAAVtB,EACG,qBAAKkB,UAAU,YAAf,SACC,+GAEF,KAGN,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKK,IAAK,6CAA8CC,SAAS/B,GAAI,GAAK,OAAQgC,MAAM,WAE1F,sBAAKP,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBJ,EAAKY,QAC3B,4BAAIZ,EAAKa,UACT,8BAAIb,EAAKc,MAAT,YAEA,cAACrC,EAAD,CAAMC,eAAIP,EAAMO,aAAIC,GAAIA,IAExB,wBAAQyB,UAAU,iBAAiBW,QAAS,WAC1C,IAAIC,EAAG,YAAO7C,EAAMO,cACpBsC,EAAIrC,IAAO,EACXR,EAAM8C,yBAAKD,GAEX7C,EAAM+C,SAAS,CAACC,KAAO,2BAAQC,qBAAM,CAACzC,GAAGqB,EAAKrB,GAAI0C,KAAKrB,EAAKY,MAAOU,KAAK,KAExExB,EAAQyB,KAAK,UAPf,sCAPF,OAiBE,wBAAQnB,UAAU,iBAAiBW,QAAS,WACxCjB,EAAQ0B,UADZ,sCAjBF,OAqBE,wBAAQpB,UAAU,iBAAiBW,QAAS,WACxCjB,EAAQyB,KAAK,MADjB,4CAMJ,eAAC,IAAD,CAAKnB,UAAU,OAAOqB,QAAQ,OAAOC,iBAAiB,SAAtD,UACE,cAAC,IAAIC,KAAL,UACE,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASd,QAAU,WAAMxC,GAAM,GAAQe,EAAM,IAAhE,sBAEF,cAAC,IAAIqC,KAAL,UACE,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASd,QAAU,WAAMxC,GAAM,GAAQe,EAAM,IAAhE,2BAIJ,cAAC,IAAD,CAAewC,GAAIvC,EAAKwC,WAAW,MAAMC,QAAS,IAAlD,SACE,cAAC3D,EAAD,CAAYG,qBAAKA,EAAKD,iCAAOA","file":"static/js/4.25f0c79c.chunk.js","sourcesContent":["//import axios from 'axios';\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\n//import { 재고context } from './App.js';\r\nimport { Nav } from 'react-bootstrap';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n\r\nlet 박스 = styled.div`\r\n  padding : 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n  font-size : 25px;\r\n  color : ${ props => props.색상 }\r\n`;\r\n\r\nfunction Detail(props) {\r\n\r\n    let [alert, alert변경] = useState(true);\r\n    let [inputData, inputData변경] = useState('');\r\n    let [누른탭, 누른탭변경] = useState(0);\r\n    let [스위치, 스위치변경] = useState(false);\r\n\r\n    useEffect(()=>{\r\n      // Detail 페이지 방문 후 alert창이 2초 후에 사라지게 해주세요\r\n      let 타이머 = setTimeout(()=>{alert변경(false)}, 2000);\r\n      console.log('안녕');\r\n      return ()=>{ clearTimeout(타이머) }\r\n    },[]);\r\n\r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    let 찾은상품 = props.shoes.find(function(상품){\r\n      return 상품.id == id\r\n    });\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <박스>\r\n          <제목 className=\"red\">Detail</제목>\r\n        </박스>\r\n        \r\n        {inputData}\r\n        <input onChange = { (e)=>{ inputData변경(e.target.value) } } />\r\n\r\n          {\r\n            alert === true\r\n            ? (<div className=\"my-alert2\">\r\n                <p>재고가 얼마 남지 않았습니다.</p>\r\n              </div>)\r\n            : null\r\n          }\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={\"https://codingapple1.github.io/shop/shoes\"+ (parseInt(id)+1) + \".jpg\"} width=\"100%\" />\r\n          </div>\r\n          <div className=\"col-md-6 mt-4\">\r\n            <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n            <p>{찾은상품.content}</p>\r\n            <p>{찾은상품.price}원</p>\r\n\r\n            <Info 재고={props.재고} id={id}/>\r\n\r\n            <button className=\"btn btn-danger\" onClick={()=>{\r\n              var arr = [...props.재고];\r\n              arr[id] -= 1;\r\n              props.재고변경(arr);\r\n\r\n              props.dispatch({type : '항목추가', 데이터 : {id:찾은상품.id, name:찾은상품.title, quan:1}});\r\n\r\n              history.push('/cart');\r\n            }}>주문하기</button> \r\n            &nbsp;\r\n            <button className=\"btn btn-danger\" onClick={()=>{\r\n                history.goBack();\r\n            }}>뒤로가기</button> \r\n            &nbsp;\r\n            <button className=\"btn btn-danger\" onClick={()=>{\r\n                history.push('/');\r\n            }}>메인가기</button> \r\n          </div>\r\n        </div>\r\n\r\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"link-0\" onClick={ ()=>{ 스위치변경(false); 누른탭변경(0) } }>Active</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"link-1\" onClick={ ()=>{ 스위치변경(false); 누른탭변경(1) } }>Option 2</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n\r\n        <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n          <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\r\n        </CSSTransition>\r\n\r\n      </div> \r\n    )\r\n  }\r\n\r\n  function TabContent(props){\r\n\r\n    useEffect(()=>{\r\n      props.스위치변경(true);\r\n    });\r\n\r\n    if (props.누른탭 === 0) {\r\n      return <div>0번째 내용 입니다.</div>\r\n    } else if (props.누른탭 === 1) {\r\n      return <div>1번째 내용 입니다.</div>\r\n    } else if (props.누른탭 === 2) {\r\n      return <div>2번째 내용 입니다.</div>\r\n    }\r\n  }\r\n\r\n  function Info(props){\r\n    return (\r\n      <p>재고 : {props.재고[props.id]}</p>\r\n    )\r\n  }  \r\n\r\n  function state를props화 (state) {\r\n    //console.log(state);\r\n    return {\r\n      state : state.reducer,\r\n      alert열렸니 : state.reducer2\r\n    }\r\n  }\r\n  \r\n  export default connect(state를props화)(Detail)\r\n\r\n  //export default Detail;"],"sourceRoot":""}